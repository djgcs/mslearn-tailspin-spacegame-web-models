pool:
  vmImage: 'ubuntu-20.04'                                       # ubuntu虚拟机环境

variables:                                                      # 设置2个变量
  buildConfiguration: 'Release'
  dotnetSdkVersion: '6.x'

steps:
- task: UseDotNet@2                                             # 指定 .net sdk 版本
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'                   # 获取项目所需依赖
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2                                         # build项目
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Pack the project - $(buildConfiguration)'
  inputs:
    command: 'pack'                                             # pack: 将项目打包，并指定版本号: 1.0.0
    projects: '**/*.csproj'
    arguments: '--no-build --configuration $(buildConfiguration)'
    versioningScheme: byPrereleaseNumber
    majorVersion: '1'
    minorVersion: '1'
    patchVersion: '0'
 
- task: NuGetCommand@2                     # push: 将 包发布到 feedPublish参数所指定的 Azure Artifacts package feed中(包源)
  displayName: 'Publish NuGet package'
  inputs:
    command: push
    feedPublish: '$(System.TeamProject)/Tailspin.SpaceGame.Web.Models'  # $(System.TeamProject): 项目名称（Space Game - web - Dependencies）
    allowPackageConflicts: true
  condition: succeeded()                   # condition: succeeded()代表上一个 task(pack任务)成功后，则执行该 task
